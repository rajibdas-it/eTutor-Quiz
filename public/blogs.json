[
    {
        "id": 1,
        "published_date": "10-Oct-2022",
        "question": "What is the purpose of React Router?",
        "img": "https://i.ibb.co/0MyqZ2w/react-router-new.jpg",
        "author_name": "Rajib Das",
        "author_img": "https://i.ibb.co/mTdN0Qp/rajib-pro.jpg",
        "descriptions": "React Router is a standard library for routing in React. It enables the navigation among views of various components in a React Application, allows changing the browser URL, and keeps the UI in sync with the URL. React Router, and dynamic, client-side routing, allows us to build a single-page web application with navigation without the page refreshing as the user navigates. React Router uses component structure to call components, which display the appropriate information. By preventing a page refresh, and using Router or Link, which is explained in more depth below, the flash of a white screen or blank page is prevented. This is one increasingly common way of having a more seamless user experience."
    },
    {
        "id": 2,
        "published_date": "10-Oct-2022",
        "question": "How Does Context API Works?",
        "img": "https://i.ibb.co/42yzNx8/context-api-new.jpg",
        "author_name": "Rajib Das",
        "author_img": "https://i.ibb.co/mTdN0Qp/rajib-pro.jpg",
        "descriptions": "The React Context API is a way for a React app to effectively produce global variables that can be passed around. This is the alternative to prop drilling or moving props from grandparent to child to parent, and so on. Context is also touted as an easier, lighter approach to state management using Redux. Context API is a (kind of) new feature added in version 16.3 of React that allows one to share state across the entire app (or part of it) lightly and with ease. React.createContext() is all you need. It returns a consumer and a provider. Provider is a component that as it's names suggests provides the state to its children. It will hold the store and be the parent of all the components that might need that store. Consumer as it so happens is a component that consumes and uses the state."
    },
    {
        "id": 3,
        "published_date": "10-Oct-2022",
        "question": "What is useRef?",
        "img": "https://i.ibb.co/nRmjKzd/use-ref-new.jpg",
        "author_name": "Rajib Das",
        "author_img": "https://i.ibb.co/mTdN0Qp/rajib-pro.jpg",
        "descriptions": "The useRef Hook allows you to persist values between renders. useRef is like a “box” that can hold a mutable value in its current property. It can be used to store a mutable value that does not cause a re-render when updated. useRef creates a plain JavaScript object. It can be used to access a DOM element directly. When we need to send value or child component we can use forwardRef. useRef doesn't notify you when its content changes. Mutating the .current property doesn't cause a re-render."
    }
]